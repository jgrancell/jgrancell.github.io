---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.application.hostname | replace "." "-"}}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.application.hostname }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Values.application.version }}
    app.kubernetes.io/component: web
    app.kubernetes.io/part-of: frontend
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.application.hostname }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/version: {{ .Values.application.version }}
      app.kubernetes.io/component: web
      app.kubernetes.io/part-of: frontend
  replicas: {{ .Values.application.replicas }}
  revisionHistoryLimit: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 50%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.application.hostname }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/version: {{ .Values.application.version }}
        app.kubernetes.io/component: web
        app.kubernetes.io/part-of: frontend
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - {{ .Values.application.hostname }}
              - key: app.kubernetes.io/instance
                operator: In
                values:
                - {{ .Release.Name }}
              - key: app.kubernetes.io/version
                operator: In
                values:
                - {{ .Values.application.version }}
              - key: app.kubernetes.io/component
                operator: In
                values:
                - web
              - key: app.kubernetes.io/part-of
                operator: In
                values:
                - frontend
            topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: codebase
        emptyDir: {}
      initContainers:
      - name: cloner
        image: alpine/git:latest
        env:
        - name: GIT_REPOSITORY
          value: {{ .Values.application.repository}}
        args:
        - "clone"
        - "$(GIT_REPOSITORY)"
        - "."
        volumeMounts:
        - mountPath: "/git"
          name: codebase
      - name: checkouter
        image: alpine/git:latest
        env:
        - name: GIT_REF
          value: {{ .Values.application.version}}
        args:
        - "checkout" 
        - "$(GIT_REF)"
        volumeMounts:
        - mountPath: "/git"
          name: codebase
      containers:
      - name: nginx
        image: "nginx:{{ .Values.nginx.version }}"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          subPath: docs
          name: codebase
        resources:
          requests:
            memory: "56Mi"
            cpu: "100m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 80
        securityContext:
          allowPrivilegeEscalation: false
